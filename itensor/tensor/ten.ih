//
// Distributed under the ITensor Library License, Version 1.2.
//    (See accompanying LICENSE file.)
//
#ifndef __ITENSOR_TEN_IH_
#define __ITENSOR_TEN_IH_

namespace itensor {

template<typename V, typename R>
std::ostream&
operator<<(std::ostream & s, TenRef<V,R> const& T)
    {
    auto r = T.r();
    if(r == 0)
        {
        s << T();
        return s;
        }
    for(auto& i : T.range())
        {
        s << "(";
        for(decltype(r) n = 0; (n+1) < r; ++n)
            s << i[n] << ",";
        s << i[r-1] << ") " << T.el(i) << "\n";
        }
    return s;
    }

template<typename V, typename R>
std::ostream&
operator<<(std::ostream & s, Ten<V,R> const& T) { return operator<<(s,makeRef(T)); }

} //namespace itensor

#endif
